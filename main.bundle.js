(()=>{"use strict";const e={development:{recipesPath:"/assets/recipes",imagePath:"/assets/images"},production:{recipesPath:"/assets/recipes",imagePath:"/assets/images"}}["undefined"==typeof window||"localhost"===window.location.hostname||"127.0.0.1"===window.location.hostname||""===window.location.hostname?"development":"production"];console.log("Recipe Data configuration:",e);const i={development:{imagePath:"/assets/images"},production:{imagePath:"/assets/images"}}["undefined"==typeof window||"localhost"===window.location.hostname||"127.0.0.1"===window.location.hostname||""===window.location.hostname?"development":"production"];class t{constructor(){this.recipeGrid=document.getElementById("recipe-grid"),this.listRecipesBtn=document.getElementById("list-recipes-btn"),this.recipeIndex=null,this.initialize()}initialize(){this.loadRecipeList(),this.listRecipesBtn&&this.listRecipesBtn.addEventListener("click",(()=>{this.loadRecipeList()}))}async loadRecipeList(){console.log("Loading recipe list...");try{this.recipeGrid.innerHTML="";const i=await async function(){try{const i=await fetch(`${e.recipesPath}/index.json`);if(!i.ok)throw new Error(`Failed to load recipe list: ${i.status} ${i.statusText}`);return await i.json()}catch(e){throw console.error("Error loading recipe list:",e),e}}();this.recipeIndex=i,this.displayRecipes(i.recipes)}catch(e){console.error("Error loading recipes:",e),this.displayError(e)}}displayRecipes(e){e&&0!==e.length?(console.log(`Displaying ${e.length} recipes`),e.forEach((e=>{const i=this.createRecipeCard(e);this.recipeGrid.appendChild(i)}))):this.displayEmptyState()}createRecipeCard(e){console.log(`Creating card for recipe: ${e.title}`);const t=document.createElement("div");t.className="recipe-card",t.setAttribute("data-recipe-id",e.id);const n=`${i.imagePath}/${e.thumbnail.replace(/^images\//,"")}`,s=`${i.imagePath}/placeholder.jpg`;return t.innerHTML=`\n            <img src="${n}" alt="${e.title}" class="recipe-thumbnail" \n                 onerror="this.src='${s}'">\n            <div class="recipe-info">\n                <h2 class="recipe-title">${e.title}</h2>\n                <div class="recipe-meta">\n                    <span>${e.time?`${e.time}`:""} ${e.difficulty?`â€¢ ${e.difficulty}`:""}</span>\n                </div>\n                ${e.description?`<p class="recipe-description">${e.description}</p>`:""}\n            </div>\n        `,t.addEventListener("click",(()=>{window.location.href=`recipe-summary.html?id=${e.id}`})),t}displayEmptyState(){this.recipeGrid.innerHTML='\n            <div class="message empty-state">\n                <h2>No Recipes Found</h2>\n                <p>Your recipe collection is empty.</p>\n                <button onclick="window.location.reload()" class="btn refresh">Refresh Page</button>\n            </div>\n        '}displayError(e){this.recipeGrid.innerHTML=`\n            <div class="error-message">\n                <h2>Oops! Something went wrong</h2>\n                <p>We couldn't load the recipes. Please try again later.</p>\n                <p class="error-details">Error: ${e.message}</p>\n                <button onclick="window.location.reload()" class="btn retry">Try Again</button>\n            </div>\n        `}}document.addEventListener("DOMContentLoaded",(()=>{new t})),document.addEventListener("DOMContentLoaded",(()=>{console.log("Recipe Viewer application initialized"),new t}))})();